Grading at Wed Sep 30 15:27:47 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==787== Memcheck, a memory error detector
==787== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==787== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==787== Command: ./tester act
==787== Parent PID: 786
==787== 
==787== Invalid write of size 8
==787==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404042: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787==  Address 0x5205398 is 8 bytes before a block of size 8 alloc'd
==787==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==787==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==787==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404042: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787== 
==787== Invalid write of size 8
==787==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404018: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787==  Address 0x5209df8 is 8 bytes before a block of size 8 alloc'd
==787==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==787==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==787==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404018: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787== 
==787== Use of uninitialised value of size 8
==787==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404079: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787== 
==787== Invalid read of size 4
==787==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404079: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==787== 
==787== 
==787== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==787==  Access not within mapped region at address 0x0
==787==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x404079: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==787==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==787==  If you believe this happened as a result of a stack
==787==  overflow in your program's main thread (unlikely but
==787==  possible), you can try to increase the size of the
==787==  main thread stack using the --main-stacksize= flag.
==787==  The main thread stack size used in this run was 8388608.
==787== 
==787== HEAP SUMMARY:
==787==     in use at exit: 27,648 bytes in 1,790 blocks
==787==   total heap usage: 2,696 allocs, 906 frees, 161,856 bytes allocated
==787== 
==787== LEAK SUMMARY:
==787==    definitely lost: 248 bytes in 31 blocks
==787==    indirectly lost: 0 bytes in 0 blocks
==787==      possibly lost: 0 bytes in 0 blocks
==787==    still reachable: 27,400 bytes in 1,759 blocks
==787==         suppressed: 0 bytes in 0 blocks
==787== Rerun with --leak-check=full to see details of leaked memory
==787== 
==787== For counts of detected and suppressed errors, rerun with: -v
==787== Use --track-origins=yes to see where uninitialised values come from
==787== ERROR SUMMARY: 33 errors from 4 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==794== Memcheck, a memory error detector
==794== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==794== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==794== Command: ./tester mde
==794== Parent PID: 793
==794== 
==794== Conditional jump or move depends on uninitialised value(s)
==794==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==794==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x4020F6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x40372C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794== 
==794== Use of uninitialised value of size 8
==794==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x4020F6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x40372C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794== 
==794== Invalid write of size 8
==794==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x4020F6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x40372C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794==  Address 0x5205398 is 8 bytes before a block of size 8 alloc'd
==794==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==794==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x4020F6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x40372C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794== 
==794== Use of uninitialised value of size 8
==794==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x403834: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794== 
==794== Invalid read of size 4
==794==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x403834: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==794== 
==794== 
==794== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==794==  Access not within mapped region at address 0x0
==794==    at 0x4029A3: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x403834: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==794==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==794==  If you believe this happened as a result of a stack
==794==  overflow in your program's main thread (unlikely but
==794==  possible), you can try to increase the size of the
==794==  main thread stack using the --main-stacksize= flag.
==794==  The main thread stack size used in this run was 8388608.
==794== 
==794== HEAP SUMMARY:
==794==     in use at exit: 25,472 bytes in 1,639 blocks
==794==   total heap usage: 2,456 allocs, 817 frees, 155,328 bytes allocated
==794== 
==794== LEAK SUMMARY:
==794==    definitely lost: 128 bytes in 16 blocks
==794==    indirectly lost: 0 bytes in 0 blocks
==794==      possibly lost: 0 bytes in 0 blocks
==794==    still reachable: 25,344 bytes in 1,623 blocks
==794==         suppressed: 0 bytes in 0 blocks
==794== Rerun with --leak-check=full to see details of leaked memory
==794== 
==794== For counts of detected and suppressed errors, rerun with: -v
==794== Use --track-origins=yes to see where uninitialised values come from
==794== ERROR SUMMARY: 1442 errors from 5 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==798== Memcheck, a memory error detector
==798== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==798== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==798== Command: ./tester brd
==798== Parent PID: 797
==798== 
==798== Conditional jump or move depends on uninitialised value(s)
==798==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==798==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4021BB: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798== 
==798== Use of uninitialised value of size 8
==798==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4021BB: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798== 
==798== Invalid write of size 8
==798==    at 0x401FD1: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4021BB: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798==  Address 0x52053e8 is 8 bytes before a block of size 8 alloc'd
==798==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==798==    by 0x401F8F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4021BB: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798== 
==798== Use of uninitialised value of size 8
==798==    at 0x401D9F: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4020DF: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40221A: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798== 
==798== Invalid read of size 4
==798==    at 0x401D9F: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4020DF: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40221A: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==798== 
==798== 
==798== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==798==  Access not within mapped region at address 0x0
==798==    at 0x401D9F: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x4020DF: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40221A: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x40338C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==798==    by 0x400AC8: main (in /graderhome/work/c4prj1_deck/tester)
==798==  If you believe this happened as a result of a stack
==798==  overflow in your program's main thread (unlikely but
==798==  possible), you can try to increase the size of the
==798==  main thread stack using the --main-stacksize= flag.
==798==  The main thread stack size used in this run was 8388608.
==798== 
==798== HEAP SUMMARY:
==798==     in use at exit: 144 bytes in 14 blocks
==798==   total heap usage: 16 allocs, 2 frees, 4,248 bytes allocated
==798== 
==798== LEAK SUMMARY:
==798==    definitely lost: 8 bytes in 1 blocks
==798==    indirectly lost: 0 bytes in 0 blocks
==798==      possibly lost: 0 bytes in 0 blocks
==798==    still reachable: 136 bytes in 13 blocks
==798==         suppressed: 0 bytes in 0 blocks
==798== Rerun with --leak-check=full to see details of leaked memory
==798== 
==798== For counts of detected and suppressed errors, rerun with: -v
==798== Use --track-origins=yes to see where uninitialised values come from
==798== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
